.root {
  --root-padding: 0.75rem;
  --container-gap: 0.75rem;
  --cell-height: calc((100vmin - 2*var(--root-padding) - 6*var(--container-gap)) / 7);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: var(--root-gap);
  animation: appear 0.3s;
  padding: var(--root-padding);
}
.container {
  max-width: calc(5 * var(--cell-height) + 4 * var(--container-gap));
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(7, 1fr);
  gap: var(--container-gap);
  justify-content: stretch;
  align-items: stretch;
}
.tile, .indicator {
  height: var(--cell-height);
  aspect-ratio: 1 / 1;
  border: none;
  flex: 1;
  box-sizing: border-box;
  padding: 0.5rem;
  border-radius: 0.5rem;
  background-color: var(--teal);
  cursor: pointer;
}
.tile img {
  width: 100%;
  aspect-ratio: 1 / 1;
  transition: all 0.3s;
}
.tile:disabled {
  cursor: not-allowed;
}
.indicator {
  background-color: transparent;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 4px;
}
.submit {
  flex: 1;
  cursor: pointer;
  border: none;
  grid-column-end: span 2;
  grid-row-end: span 2;
  background-color: var(--dark-teal);
  background-image: url(./../../images/sef/checkmark.svg);
  background-repeat: no-repeat;
  background-size: 75% 75%;
  background-position: center;
  border-radius: 50%;
  transition: all 0.3s;
}
.submit:disabled {
  cursor: not-allowed;
}
.submit:hover {
  background-color: var(--teal);
}
.symbolContainer {
  height: var(--cell-height);
  grid-column-end: span 5;
  display: flex;
  gap: var(--container-gap);
}
.symbol {
  flex-shrink: 1;
  width: var(--cell-height);
  border: none;
  box-sizing: border-box;
  padding: 0.5rem;
  border-radius: 0.5rem;
  background-color: var(--teal);
  cursor: pointer;
}
.symbol img {
  width: 100%;
  aspect-ratio: 1 / 1;
}
.signal {
  border-radius: 50%
}
.red {
  background-color: var(--red);
}
.yellow {
  background-color: var(--yellow);
}
.gray {
  background-color: var(--gray);
}
.timeCounter {
  position: fixed;
  right: 2rem;
  top: 0.75rem;
  color: var(--dark-teal);
  font-size: 2rem;
  font-weight: 600;
  height: auto;
  width: auto;
  background-color: var(--white);
}
.dialogCodeContainer {
  display: flex;
  justify-content: center;
  gap: 0.75rem;
  padding: 1rem 1;
}
.dialogCodeContainer img {
  width: 3rem;
  aspect-ratio: 1 / 1;
  flex-shrink: 1;
}
@media only screen and (max-width: 768px) {
  .root {
    --root-padding: 0.75rem;
    --container-gap: 0.75rem;
    --cell-height: 5rem;
  }
}
@media only screen and (max-width: 720px) {
  .root {
    --root-padding: 0.75rem;
    --container-gap: 0.75rem;
    --cell-height: 5rem;
  }
}
@media only screen and (max-width: 425px) {
  .root {
    --root-padding: 0.5rem;
    --container-gap: 0.5rem;
    --cell-height: calc((100vmin - 2*var(--root-padding) - 4*var(--container-gap)) / 5);
  }
}
@media only screen and (max-width: 320px) {
  .root {
    --root-padding: 0.25rem;
    --container-gap: 0.25rem;
    --cell-height: calc((100vmin - 2*var(--root-padding) - 4*var(--container-gap)) / 5);
  }
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}